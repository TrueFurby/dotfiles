# handy functions

confirm() {
    if [ -n "$ZSH_VERSION" ]; then
        read -k 1 "?$1 y/N "
    else
        read -ps "$1 y/N " -n 1
    fi
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        return 0
    fi
    return 1
}

_err() {
    echo $1 1>&2
    return 1
}

bkup() {
    local file="$1"
    [ -f "$file" ] || return 1
    cp -f -S '.bk~' --backup='numbered' $file $file
}

newsh() {
    local editor=${EDITOR:-`which nano`}
    local script="$1"
    [ -z $script ] && return `_err "$0: script name required"`
    if [[ $script != *".sh" ]]; then
        script="$script".sh
    fi
    if [ -a "$script" ]; then
        return `_err "$0: file '$script' already exists"`
    else
        echo "#!/bin/bash" > $script
        chmod +x $script
        eval $editor $script
    fi
}

nano() {
    if [ -f "$1" ] && [ ! -w "$1" ] && [ "$(whoami)" != 'root' ]; then
        echo "file is not writable, using sudo.."
        sudo nano "$@"
    else
        if [ ! -e "$1" ] && [[ "$1" == *".sh" ]]; then
            echo "#!/bin/bash" > $1
            chmod +x $1
        fi
        command nano "$@"
    fi
}

getsel() {
    [ -x /usr/bin/xsel ] && { xsel; return; }
    [ -x /usr/bin/xclip ] && { xclip -o; return; }
    return `_err "$0: 'xsel or xclip required'"`
}

putsel() {
    if [ -x /usr/bin/xsel ]; then
        echo "$1" | xsel -b
    elif [ -x /usr/bin/xclip ]; then
        echo "$1" | xclip -selection clipboard
    else
        return `_err "$0: 'xsel or xclip required'"`
    fi
}

man() {
	env \
		LESS_TERMCAP_mb=$(printf "\e[0;31m") \
		LESS_TERMCAP_md=$(printf "\e[1;33m") \
		LESS_TERMCAP_me=$(printf "\e[0m") \
		LESS_TERMCAP_se=$(printf "\e[0m") \
		LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
		LESS_TERMCAP_ue=$(printf "\e[0m") \
		LESS_TERMCAP_us=$(printf "\e[0;33m") \
		PAGER="${commands[less]:-$PAGER}" \
		_NROFF_U=1 \
		PATH="$HOME/bin:$PATH" \
	man "$@"
}

repl() {
	IN=$(cat -)
	[[ -n $1 ]] || { return `_err "$0: 'missing arguments'"`; }
	echo $IN | sed -r "s/$1/$2/g"
}
